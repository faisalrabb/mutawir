# Generated by Django 3.1 on 2020-12-28 01:01

from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(default=None, max_length=39, null=True)),
                ('crypto_balance', models.IntegerField(default=0)),
                ('paypal_balance', models.IntegerField(default=0)),
                ('profile_picture', models.ImageField(upload_to='')),
                ('bio', models.TextField()),
                ('linked_in_link', models.URLField(default=None, null=True)),
                ('country', models.CharField(choices=[('DZ', 'Algeria'), ('BH', 'Bahrain'), ('EG', 'Egypt'), ('IQ', 'Iraq'), ('JO', 'Jordan'), ('KW', 'Kuwait'), ('LB', 'Lebanon'), ('LY', 'Libya'), ('MR', 'Mauritania'), ('MA', 'Morocco'), ('OM', 'Oman'), ('PS', 'Palestine'), ('SY', 'Syria'), ('QA', 'Qatar'), ('KSA', 'Saudi Arabia'), ('SD', 'Sudan'), ('TN', 'Tunisia'), ('UAE', 'United Arab Emirates'), ('WS', 'Western Sahara'), ('YE', 'Yemen')], max_length=3)),
                ('crypto_public_key', models.CharField(default=None, max_length=42, null=True)),
                ('paypal_email', models.EmailField(default=None, max_length=254, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('skills', models.ManyToManyField(default=None, null=True, related_name='qualified', to='accounts.Skill')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
    ]
